<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<meta name="Author" content="">
	<meta name="Keywords" content="">
	<meta name="Description" content="">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
	<title>chat</title>
	<link href="css/global-style.css" rel="stylesheet">
	<link href="css/ionicons.min.css" rel="stylesheet">
	<style type="text/css">
		#googleMap{
			width: 100%;
			height: 100%;
		}
		.profile{
			margin-bottom: 15px;
			position: relative;
		}
		.profile > img{
			width: 80px;
			height: 80px;
			border-radius: 50%;
			vertical-align: middle;
		}
		.profile > .name{
			font-size: 22px;
			font-weight: 300;
		}
		.profile > .btn-config{
			display: block;
			position: absolute;
			top: -25px;
			right: 0;
			background-color: transparent;
			border: 0;
			padding: 0;
		}
		.profile > .btn-config > i:before{
			font-size: 26px;
		}
		#mapLayout{
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			z-index: 9999;
			display: none;
		}
		#mapLayout > .close{
			position: absolute;
			top: 10px;
			right: 10px;
			z-index: 10000;
			background-color: transparent;
			border: 0;
			font-size: 28px;
			color: #929292;
			text-shadow: 0 1px 0 #fff;
			padding: 0;
		}
		#mapLayout > .close:hover {
			color: #656565;
		}
		.chat-profile > img{
			width: 80px;
			height: 80px;
			border-radius: 50%;
			margin-bottom: 5px;
		}
		.chat-profile > p{
			color: #4e5665;
			font-size: 15px;
			line-height: 150%;
		}
		.fn-btn-wrap{
			width: 100%;
			padding: 0 15px;
		}
		.fn-btn{
			display: block;
			border: 0;
			width: 100%;
		}
		.fn-btn > i{
			margin-right: 10px;
		}
		.fn-btn-wrap > .btn-logout{
			margin-top: 15px;
			color: #0084ff;
			border: 0;
			outline: none;
			font-size: 14px;
			background: #fff;
		}
		.main-layout{
			position: relative;
			overflow: hidden;
		}
		.match-loading-wrap{
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 343px;
			z-index: 9999;
			background: #fff;
			display: none;
		}
		.match-loading-inner{
			display: table-cell;
			vertical-align: middle;
			text-align: center;
			color: #57565A;
			font-size: 15px;
		}
		.gender{
			margin-right: 6px;
		}
		.gender:before{
			font-size: 18px;
		}
		.gender.ion-female{
			color: #FF007F;
		}
		.gender.ion-male{
			color: #007FFF;
		}
		.btnInviteChat{
			padding: 6px 16px;
			background: #fff;
			border: 1px solid #269abc;
			color: #269abc;
			border-radius: 4px;
			-webkit-border-radius: 4px;
		}
		.chat-wrap{
			width: 100%;
			max-width: 800px;
			border-right: 1px solid #ECECEC;
			border-left: 1px solid #ECECEC;
			position: relative;
			margin: 0 auto;
			text-align: left;
			padding-top: 0;
		}
		.chat-wrap > .chat-header{
			padding: 13px 0;
			border-bottom: 1px solid #ECECEC;
			text-align: center;
			position: fixed;
			margin-left: -399px;
			width: 798px;
			top: 0;
			left: 50%;
			background: #fff;
			z-index: 10000;
		}
		.chat-wrap > .chat-header > button{
			position: absolute;
			left: 0;
			top: 8px;
			margin-top: 0;
		}
		.chat-wrap > .chat-header > span{
			font-size: 16px;
		}
		.message-write-form{
			position: fixed;
			bottom: 0;
			left: 50%;
			margin-left: -400px;
			width: 800px;
			padding: 15px;
			border-top: 1px solid #ECECEC;
			border-right: 1px solid #ECECEC;
			border-left: 1px solid #ECECEC;
			background: #fff;
			z-index: 10000;
		}
		.message-write-form input{
			height: auto;
			border: 0;
			font-size: 15px;
			outline: none;
			width: 100%;
			padding-right: 35px;
		}
		.message-write-form .image-upload{
			position: absolute;
			top: 12px;
			right: 13px;
			cursor: pointer;
			overflow: hidden;
		}
		.message-write-form .image-upload > i:before{
			color: #C5C5C5;
			font-size: 28px;
		}
		.message-write-form .image-upload > input{
			position: absolute;
			top: 0;
			right: 0;
			margin: 0;
			opacity: 0;
			-ms-filter: 'alpha(opacity=0)';
			font-size: 200px!important;
			direction: ltr;
			cursor: pointer;
		}
		.message-list{
			padding-top: 60px;
			overflow-x: hidden;
			overflow-y: auto;
		}
		.message-list > .system-message{
			color: #555;
			padding-left: 15px;
			margin-bottom: 10px;
		}
		.message-list > .system-message > .time{
			color: #ccc;
			font-size: 12px;
			margin-left: 8px;
		}
		.message-list .message{
			display: block;
			max-width: 65%;
			margin-bottom: 30px;
			position: relative;
			padding: 10px 10px;
			background-color: #fff;
			border-radius: 11px;
			-webkit-transition: -webkit-transform .3s ease-out;
			-moz-transition: -moz-transform .3s ease-out;
			-o-transition: -o-transform .3s ease-out;
			transition: transform .3s ease-out;
		}
		.message-list .message > .message-profile-image{
			position: absolute;
			top: -1px;
			left: -50px;
		}
		.message-list .message > .message-profile-image > img{
			width: 40px;
			height: 40px;
			border-radius: 50%;
			-webkit-border-radius: 50%;
		}
		.message-list .message-image{
			display: block;
			max-width: 30%;
			position: relative;
			margin-bottom: 30px;
		}
		.message-list .message-image > .message-profile-image{
			position: absolute;
			top: -1px;
			left: -50px;
		}
		.message-list .message-image > .message-profile-image > img{
			width: 40px;
			height: 40px;
			border-radius: 50%;
			-webkit-border-radius: 50%;
		}
		.message-list .message-image.left{
			float: left;
			margin-left: 60px;
			margin-top: 15px;
		}
		.message-list .message-image.right {
			float: right;
			margin-right: 15px;
			margin-top: 10px;
		}
		.message-list .message-image img{
			width: 100%;
			height: auto;
		}
		.message-list .message.on{
			transform: scale(.75);
			-webkit-transform: scale(.75);
			opacity: 0;
		}
		.message-list .message-username{
			position: absolute;
			top: -22px;
			left: 2px;
			font-weight: bold;
			white-space: nowrap;
		}
		.message-list .message.right {
			float: right;
			margin-right: 15px;
			margin-top: 10px;
			background-color: #047DFF;
			color: #fff;
		}
		.message-list .message.left {
			float: left;
			margin-left: 60px;
			margin-top: 15px;
			background-color: #E5E5EA;
			color: #000;
		}
		/*.message-list .message.left:after{
			position: absolute;
			content: " ";
			top: 5px;
			left: -8px;
			width: 0;
			height: 0;
			border-top: 15px solid #E5E5EA;
			border-left: 15px solid transparent;
		}*/
		.message-list .message.right:after{
			position: absolute;
			content: " ";
			top: 17px;
			right: -8px;
			width: 0;
			height: 0;
			border-bottom: 15px solid #047DFF;
			border-right: 15px solid transparent;
		}
		.message-list .message-time{
			position: absolute;
			bottom: -19px;
			right: 0;
			color: #bbb;
			font-size: 12px;
			white-space: nowrap;
		}
		.message-list .left .message-time{
			left: 0;
		}
		.message-list .message-line{
			clear: both;
		}
		#chatLayout{
			display: none;
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			z-index: 9999;
			background: #fff;
		}
		@media (max-width: 768px){
			.main-inner{
				vertical-align: top;
			}
			.profile{
				background-color: #474B6B;
				padding: 65px 0 50px 0;
				color: #fff;
				margin-bottom: 0;
			}
			.fn-btn-wrap{
				padding: 0;
				max-width: 100%;
			}
			.fn-btn{
				padding: 25px 0;
				font-size: 18px;
				font-weight: 300;
			}
			.match-btn{
				color: #fff;
				background: #43cea2; /* fallback for old browsers */
				background: -webkit-linear-gradient(to left, #43cea2 , #185a9d); /* Chrome 10-25, Safari 5.1-6 */
				background: linear-gradient(to left, #43cea2 , #185a9d); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
			}
			.map-btn{
				color: #fff;
				background: #B993D6; /* fallback for old browsers */
				background: -webkit-linear-gradient(to left, #B993D6 , #8CA6DB); /* Chrome 10-25, Safari 5.1-6 */
				background: linear-gradient(to left, #B993D6 , #8CA6DB); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
			}
			.profile > .btn-config{
				top: 10px;
				right: 10px;
				opacity: 0.9;
			}
			.match-loading-wrap{
				position: fixed;
				height: 100%;
			}
			.chat-wrap{
				border-right: 0;
				border-left: 0;
			}
			.message-write-form{
				left: 0;
				width: 100%;
				margin-left: 0;
				border-right: 0;
				border-left: 0;
			}
			.chat-wrap > .chat-header{
				left: 0;
				width: 100%;
				margin-left: 0;
			}
			.message-list .message-image{
				max-width: 45%;
			}
		}
		@media (min-width: 768px){
			.main-layout{
				padding: 45px 25px;
				margin: 0 auto;
				width: 400px;
				background: #fff;
				border-radius: 40px;
				-webkit-border-radius: 40px;
			}
			body{
				background: linear-gradient(90deg, rgba(236, 236, 227, 0.6), rgba(207, 210, 212, 0.6));
			}
			.fn-btn{
				background: #fff;
				width: 100%;
				padding: 10px 0;
				border: 1px solid #ddd;
				margin-bottom: 10px;
				border-radius: 4px;
				font-size: 16px;
				color: #57565A;
			}
		}
	</style>
</head>
<body>
<div class="wrap" id="mainLayout">
	<div class="inner main-inner">
		<div class="main-layout">
			<div class="profile">
				<img src="http://graph.facebook.com/<%= user.id %>/picture?type=large&width=1024&height=1024">
				<p class="name"><%= user.displayName %></p>
				<button type="button" class="btn-config" title="설정" onclick="$('#configLayout').css('display','table');"><i class="ion-ios-gear-outline"></i></button>
			</div>
			<div class="fn-btn-wrap">
				<button type="button" class="fn-btn match-btn" onclick="btnRandom()"><i class="ion-ios-chatboxes-outline"></i>대화시작</button>
				<button type="button" class="fn-btn map-btn" onclick="btnShowMap()"><i class="ion-ios-location-outline"></i>주변검색</button>
				<button type="button" class="btn-logout" onclick="btnLogout()">로그아웃</button>
			</div>
			<div class="match-loading-wrap" id="matchLoadingLayout">
				<div class="match-loading-inner">
					<span class="spinner"></span>
					<p>매칭중입니다...</p>
					<button type="button" onclick="btnMatchCancel()" class="btn btn-blue">취소</button>
				</div>
			</div>
		</div>
	</div>
</div>
<div id="mapLayout">
	<div id="googleMap"></div>
	<button type="button" class="close" onclick="btnHideMap()" title="닫기">×</button>
</div>
<div class="wrap" id="chatProfile" style="z-index:9999;display:none;background:#fff;">
	<div class="inner">
		<div class="chat-profile"></div>
	</div>
</div>
<div id="chatLayout">
	<div class="chat-wrap">
		<div class="chat-header" id="chatHeaderLayout">
			<button type="button" class="btn btn-blue" onclick="btnCloseChat()">나가기</button>
			<span id="chatDisplayName">사용자</span>
		</div>
		<div class="message-list" id="messageList"></div>
		<div class="message-write-form">
			<form id="msgForm" action="/" onsubmit="return false;">
				<input type="text" id="msgbox" placeholder="메시지를 입력하세요...">
				<div class="spinner" id="imageLoading" style="position:absolute;top:18px;right:16px;display:none;"></div>
				<span class="image-upload" id="imageUploadBtn">
					<i class="ion-ios-camera"></i>
					<input type="file" accept="image/*" id="imageUpload">
				</span>
			</form>
		</div>
	</div>
</div>

<div id="inviteLayout" class="modal">
	<div class="modal-inner">
		<div class="modal-content" style="text-align:center;">
			<p><strong id="inviteForUsername"></strong>님에게 대화요청중입니다...</p>
			<span id="inviteLeftTime" style="font-size:24px;font-weight:200;display:inline-block;margin-bottom:10px;">15</span>
		</div>
	</div>
</div>

<div id="configLayout" class="modal">
	<div class="modal-inner">
		<div class="modal-content">
			<button type="button" class="close" onclick="$('#configLayout').hide();" title="닫기">×</button>
			<h1 class="title">설정</h1>
			<div class="config-container">
				<h2 class="title">대화상대 검색 필터</h2>
				<div class="form">
					<h3 class="form-title">성별</h3>
					<label class="radio"><input type="radio" name="gender" checked>모두</label>
					<label class="radio"><input type="radio" name="gender">여성</label>
					<label class="radio"><input type="radio" name="gender">남성</label>
				</div>
			</div>
		</div>
	</div>
</div>

<div id="resInviteLayout" class="modal">
	<div class="modal-inner">
		<div class="modal-content" style="text-align:center;">
			<img src="" id="resInviteProfileImage" style="width:80px;height:80px;border-radius:50%;">
			<p><strong id="resInviteUsername"></strong>님이 대화를 요청하였습니다.</p>
			<span id="resInviteLeftTime" style="font-size:24px;font-weight:200;display:block;margin-bottom:10px;margin-top:10px;">15</span>
			<div style="margin-bottom:10px;">
				<button type="button" id="btnInviteAccept" class="btn btn-green" onclick="" style="margin-top:0;">수락</button>
				<button type="button" id="btnInviteReject" class="btn btn-gray" onclick="" style="margin-top:0;">거절</button>
			</div>
		</div>
	</div>
</div>

<!--script -->
<script src="js/jquery.min.js"></script>
<script src="https://cdn.socket.io/socket.io-1.4.5.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>

<script>
	var socket = io();
	var lat = "<%= lat %>";
	var lng = "<%= lng %>";
	var markers = [];
	var infowindow = new google.maps.InfoWindow();
	var inviteLeftTimeInterval;
	var resInviteLeftTimeInterval;
	var matchTimeInterval;
	var matchTimeDelay = 0;

	socket.emit("init_user", {id:"<%= user.id %>", name:"<%= user.displayName %>" });

	$(function(){
		$("#messageList").css("height",$(document).height()-50);
		$("#lat").val(lat);
		$("#lng").val(lng);

		//메시지 전송
		$("#msgForm").submit(function(){
			if($("#msgbox").val() != "") {
				socket.emit('send_msg', {msg: $('#msgbox').val(), id:"<%= user.id %>"});
				$('#msgbox').val('');
			}
		});

		//메시지 전송 엔터키 처리
		$("#msgbox").keyup(function(event) {
			if (event.which == 13) {
				if($("#msgbox").val() != "") {
					socket.emit('send_msg', {msg: $('#msgbox').val(), id:"<%= user.id %>"});
					$('#msgbox').val('');
				}
			}
		});

		//이미지 전송
		$("#imageUpload").change(function(e){
			$("#imageUploadBtn").hide();
			$("#imageLoading").show();
			var file = e.originalEvent.target.files[0], reader = new FileReader();

			reader.addEventListener("load", function () {
				socket.emit('image_upload',{baseurl:reader.result.replace(/^data:image\/(png|jpg|gif|jpeg);base64,/, ""), id:"<%= user.id %>"});
			}, false);

			reader.onerror = function (e) {
				alert("사진전송에 실패하였습니다");
				$("#imageUploadBtn").show();
				$("#imageLoading").hide();
			}
			reader.readAsDataURL(file);
		});

		$("#msgbox").focus(function(){
			if('ontouchstart' in document.documentElement){

			}
		});

		$("#msgbox").blur(function(){
			if('ontouchstart' in document.documentElement){

			}
		});
	});



	// 대화시작 버튼
	function btnRandom(){
		matchTimeInterval = setInterval(function(){
			matchTimeDelay++;
			if(matchTimeDelay == 10){
				clearInterval(matchTimeInterval);
				matchTimeDelay = 0;
				alert("대화상대를 찾을수 없습니다.");
				$("#matchLoadingLayout").hide();
				socket.emit("set_fail_random", {id:"<%= user.id %>"});
			}
		},1000);
		$("#matchLoadingLayout").css("display","table");
		socket.emit("find_user", {id:"<%= user.id %>", name:"<%= user.displayName %>", gender:"male"});
	}

	// 대화시작 취소
	function btnMatchCancel(){
		clearInterval(matchTimeInterval);
		matchTimeDelay = 0;
		$("#matchLoadingLayout").hide();
		socket.emit("set_fail_random", {id:"<%= user.id %>"});
	}

	// 주변검색 버튼
	function btnShowMap(){
		$("#mapLayout").show();
		socket.emit("join_map");
		deleteAllMarkers();
		if($("#googleMap").has("div").length == 0){
			initialize();
		}
	}

	//맵레이아웃 닫기 버튼
	function btnHideMap(){
		$('#mapLayout').hide();
		socket.emit("leave_map");
	}

	//로그아웃
	function btnLogout(){
		if(confirm("로그아웃 하시겠습니까?")){
			socket.emit("logout", {id:"<%= user.id %>"});
			location.href = "/logout";
		}
	}

	//맵 초기화
	function initialize(){
		var mapOptions = {
			zoom : 16, //기본 확대율
			center : new google.maps.LatLng(lat, lng), // 지도 중앙 위치
			scrollwheel : true, //마우스 휠로 확대 축소 사용 여부
			mapTypeControl : false //맵 타입 컨트롤 사용 여부
		};
		map = new google.maps.Map(document.getElementById('googleMap'), mapOptions);

		google.maps.event.addListener(map, 'click', function( event ){
			console.log("map clicked !");
		});
		google.maps.event.addListener(map, 'dragend', function(){
			console.log("drag end !")
		});
	}

	//맵에 있는 모든마커 삭제
	function deleteAllMarkers(){
		for (var key in markers) {
			markers[key].marker.setMap(null);
			google.maps.event.clearInstanceListeners(markers[key].marker);
		}
		markers = [];
	}

	//맵에 마커 추가
	function createMarker(lat, lng, id, html) {
		var icon = {
			url: 'http://graph.facebook.com/'+id+'/picture?type=large&width=512&height=512',
			scaledSize: new google.maps.Size(45, 45), // scaled size
			origin: new google.maps.Point(0,0), // origin
			anchor: new google.maps.Point(0, 0) // anchor
		};
		var marker = new google.maps.Marker({
			position: new google.maps.LatLng(lat, lng),
			map: map,
			draggable: false,
			animation: google.maps.Animation.DROP,
			icon: icon
		});
		google.maps.event.addListener(marker, 'click', function () {
			infowindow.setContent(html);
			infowindow.open(map, marker);
		});
		markers[id] = new Object();
		markers[id].marker = marker;
	}

	//대화요청
	function inviteChat(id, name){
		socket.emit("invite_chat", {uid:"<%= user.id %>", id:id, name:name});
	}

	//대화요청 응답
	function requestInvite(type, uid){
		socket.emit("req_invite_accept", {uid:uid, id:"<%= user.id %>", type: type});
		if(type == "accept"){
			//alert("수락함");
		}else{
			//alert("거절함");
		}
		clearInterval(resInviteLeftTimeInterval);
		$("#resInviteLayout").hide();
		$("#resInviteLeftTime").html("15");
	}

	//대화 나가기
	function btnCloseChat(){
		socket.emit("leave_chat", {id:"<%= user.id %>", name:"<%= user.displayName %>"});
		$("#messageList").empty();
		$("#chatLayout").hide();
		$("#mainLayout").show();
	}

	//사용자 리스트 가져오기
	socket.on('userlist',function(data){
		for(var i=0; i< data.users.length; i++){
			var gender = "<i class='ion-female gender'></i>";
			if(data.users[i].gender == "male") gender = "<i class='ion-male gender'></i>";
			if(data.users[i].id != "<%= user.id %>"){
				createMarker(data.users[i].lat, data.users[i].lng, data.users[i].id, '<div id="content"><div id="bodyContent"><p>'+gender+data.users[i].name+'</p><button type="button" class="btnInviteChat" onclick="inviteChat(\''+data.users[i].id+'\', \''+data.users[i].name+'\')">대화요청</button></div></div>');
			}else{
				createMarker(data.users[i].lat, data.users[i].lng, data.users[i].id, '<div id="content"><div id="bodyContent"><p>'+gender+data.users[i].name+'</p></div></div>');
			}

		}
	});

	//사용자 추가
	socket.on('res_add_user',function(data){
		console.log(data);
		var gender = "<i class='ion-female gender'></i>";
		if(data.user.gender == "male") gender = "<i class='ion-male gender'></i>";
		createMarker(data.user.lat, data.user.lng, data.user.id, '<div id="content"><div id="bodyContent"><p>'+gender+data.user.name+'</p><button type="button" class="btnInviteChat" onclick="inviteChat(\''+data.user.id+'\', \''+data.user.name+'\')">대화요청</button></div></div>');
	});

	//사용자 삭제
	socket.on('res_delete_user',function(data){
		markers[data.id].marker.setMap(null);
		google.maps.event.clearInstanceListeners(markers[data.id].marker);
		delete markers[data.id];
	});

	// 랜덤대화 응답
	socket.on('init_random', function(data){
		console.log(data);
		if(data.result == "success"){
			$("#matchLoadingLayout").hide();
			clearInterval(matchTimeInterval);
			matchTimeDelay = 0;
			$("#mainLayout").hide();
			$("#chatProfile").css("display","table").find(".chat-profile").empty().append("<img src='http://graph.facebook.com/"+data.user.id+"/picture?type=large&width=1024&height=1024'><p><strong>"+data.user.name+"</strong>님과 매칭되었습니다.<br>곧 대화가 시작됩니다...</p>");
			$("#chatDisplayName").html(data.user.name);
			socket.emit("init_chat", {uid:data.uid, id:"<%= user.id %>", name:"<%= user.displayName %>"});
			$("#messageList").empty();
			setTimeout(function(){
				$("#chatLayout").show();
				socket.emit("start_chat", {uid:data.uid});
				$("#chatProfile").hide();
			},3000);
		}
	});

	// 대화요청 결과
	socket.on('invite_chat_result', function(data){
		if(data.result){
			$("#inviteLayout").css("display","table");
			$("#inviteForUsername").html(data.name);
			inviteLeftTimeInterval = setInterval(function(){
				var second = parseInt($("#inviteLeftTime").text());
				second--;
				$("#inviteLeftTime").html(second);
				if(second == 0){
					clearInterval(inviteLeftTimeInterval);
					alert("상대방이 응답하지 않습니다");
					$("#inviteLayout").hide();
					$("#inviteLeftTime").html("15");
				}
			},1000);
		}else{
			alert("상대방이 대화중입니다.");
		}
	});

	// 대화요청 응답
	socket.on('res_invite_chat', function(data){
		if(data.type == "invite"){
			$("#resInviteProfileImage").attr("src", "http://graph.facebook.com/"+data.uid+"/picture?type=large&width=1024&height=1024");
			$("#resInviteUsername").html(data.name);
			$("#btnInviteReject").attr("onclick", "requestInvite('reject', '"+data.uid+"')");
			$("#btnInviteAccept").attr("onclick", "requestInvite('accept', '"+data.uid+"')");
			$("#resInviteLayout").css("display","table");
			resInviteLeftTimeInterval = setInterval(function(){
				var second = parseInt($("#resInviteLeftTime").text());
				second--;
				$("#resInviteLeftTime").html(second);
				if(second == 0){
					clearInterval(resInviteLeftTimeInterval);
					$("#resInviteLayout").hide();
					$("#resInviteLeftTime").html("15");
				}
			},1000);
		}else if(data.type == "accept"){
			if(data.uid == "<%= user.id %>"){
				clearInterval(inviteLeftTimeInterval);
				$("#inviteLayout").hide();
				$("#inviteLeftTime").html("15");

				$("#mainLayout").hide();
				$("#chatProfile").css("display","table").find(".chat-profile").empty().append("<img src='http://graph.facebook.com/"+data.id+"/picture?type=large&width=1024&height=1024'><p><strong>"+data.name+"</strong>님이 대화를 수락하였습니다.<br>곧 대화가 시작됩니다...</p>");
				$("#chatDisplayName").html(data.name);
				socket.emit("init_chat", {uid:data.uid, id:"<%= user.id %>", name:"<%= user.displayName %>"});
				$("#messageList").empty();
				setTimeout(function(){
					$("#chatLayout").show();
					socket.emit("start_chat", {uid:data.uid});
					$("#chatProfile").hide();
				},3000);
			}else{
				clearInterval(resInviteLeftTimeInterval);
				$("#resInviteLayout").hide();
				$("#resInviteLeftTime").html("15");

				$("#mainLayout").hide();
				$("#chatProfile").css("display","table").find(".chat-profile").empty().append("<img src='http://graph.facebook.com/"+data.id+"/picture?type=large&width=1024&height=1024'><p><strong>"+data.name+"</strong>님의 대화를 수락하였습니다.<br>곧 대화가 시작됩니다...</p>");
				$("#chatDisplayName").html(data.name);
				socket.emit("init_chat", {uid:data.uid, id:"<%= user.id %>", name:"<%= user.displayName %>"});
				$("#messageList").empty();
				setTimeout(function(){
					$("#chatLayout").show();
					socket.emit("start_chat", {uid:data.uid});
					$("#chatProfile").hide();
				},3000);
			}
		}else{
			if(data.uid == "<%= user.id %>"){
				clearInterval(inviteLeftTimeInterval);
				$("#inviteLayout").hide();
				$("#inviteLeftTime").html("15");
				alert("상대방이 대화를 거절하였습니다.");
			}else{
				clearInterval(resInviteLeftTimeInterval);
				$("#resInviteLayout").hide();
				$("#resInviteLeftTime").html("15");
			}
		}

	});

	// 대화 시스템 메시지 수신
	socket.on('broadcast_message',function(data){
		$("#messageList").append("<div class='system-message'>"+data.msg+"<span class='time'>"+data.time+"</span></div>");
		setTimeout(function(){
			$("#messageList").scrollTop($("#messageList").prop("scrollHeight"));
		},200);
	});

	// 대화 메시지 수신
	socket.on('receive_message',function(data){
		if(data.type == "message"){
			var $message
			if("<%= user.id %>" == data.id){
				$message = $("<div class='message right on'>"+data.msg+"<div class='message-time'>"+data.time+"</div></div><div class='message-line'></div>");
			}else{
				$message = $("<div class='message left on'><a class='message-profile-image' href='https://www.facebook.com/app_scoped_user_id/"+data.id+"' target='_blank'><img src='http://graph.facebook.com/"+data.id+"/picture?type=large&width=512&height=512'></a>"+data.msg+"<div class='message-time'>"+data.time+"</div></div><div class='message-line'></div>");
			}
			$("#messageList").append($message);
			setTimeout(function(){
				$message.removeClass("on");
			},200);
		}else{
			if("<%= user.id %>" == data.id){
				$("#messageList").append("<div class='message-image right'><a href='"+data.msg+"' target='_blank'><img src='"+data.msg+"'></a><div class='message-time'>"+data.time+"</div></div><div class='message-line'></div>");
			}else{
				$("#messageList").append("<div class='message-image left'><a class='message-profile-image' href='https://www.facebook.com/app_scoped_user_id/"+data.id+"' target='_blank'><img src='http://graph.facebook.com/"+data.id+"/picture?type=large&width=512&height=512'></a><a href='"+data.msg+"' target='_blank'><img src='"+data.msg+"'></a><div class='message-time'>"+data.time+"</div></div><div class='message-line'></div>");
			}
			$("#imageUploadBtn").show();
			$("#imageLoading").hide();
		}
		setTimeout(function(){
			$("#messageList").scrollTop($("#messageList").prop("scrollHeight"));
		},200);
		console.log(data);
	});

</script>
</body>
</html>